抽象工厂方法
描述:提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体类
AbstractProduct: 抽象产品，它们都有可能有两种或者多种不同的实现。
本demo中的ICPU和IMainBoard的接口

ConcreteProduct:包括ProductA和ProductB， 对两个抽象产品的具体分类的实现。
本demo中的AMDCPU,AMDMainBoard,IntelCPU,IntelMainBoard


AbstractFactory: 抽象工厂接口，它里面应该包含所有的产品创建的抽象方法。
本demo中的IProductFactory.java类

ConcreteFactory: 包括ConcreteFactoryA和ConcreteFactoryB，具体的工厂，创建具有特定实现的产品对象。
本demo中的AMDFactory.java类和IntelFactory.java类

本demo只演示了AMD和Intel，
如果再添加其他的比如说高通CPU和高通的主板，
只要高通的CPU和高通的主板分别继承ICPU,IMainBoard即可,
另外再添加高通的Factory工厂，
即完成对高通产品的支持，而不用更改其他原有代码!